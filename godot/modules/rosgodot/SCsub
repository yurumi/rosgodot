Import('env')

import os

ros_distro = os.environ['ROS_DISTRO']
ros_path = '/opt/ros/' + ros_distro

ros_libs = [
    'roscpp',
    'rosconsole',
    'rosconsole_log4cxx',
    'rosconsole_backend_interface',
    'roscpp_serialization',
    'xmlrpcpp',
    'rostime',
    'cpp_common'
]

ros_deps = [
    'pthread',
    'boost_filesystem',
    'boost_signals',
    'boost_regex',
    'boost_system',
    'boost_thread',
    'boost_chrono',
    'boost_date_time',
    'boost_atomic',
    'console_bridge',
    'log4cxx'
]

sources = [
        "register_types.cpp",
        "rosgodot.cpp"
]


# First, create a custom env for the shared library.
module_env = env.Clone()

# roscpp include
module_env.Append(CPPPATH=[ros_path + '/include'])

# Path to ROS libs
module_env.Append(LIBPATH=[ros_path + '/lib'])

if ARGUMENTS.get('rosgodot_shared', 'no') == 'yes':
    # Shared lib compilation
    module_env.Append(CXXFLAGS='-fPIC') # Needed to compile shared library

    # We don't want godot's dependencies to be injected into our shared library
    module_env['LIBS'] = []

    for lib in ros_libs:
        module_env.Append(LIBS=[lib])

    for dep in ros_deps:
        module_env.Append(LIBS=[dep])

    # Now define the shared library. Note that by default it would be built
    # into the module's folder, however it's better to output it into `bin`
    # next to the godot binary.
    shared_lib = module_env.SharedLibrary(target='#bin/rosgodot', source=sources)

    # Finally notify the main env it has our shared lirary as a new dependency.
    # To do so, SCons wants the name of the lib with it custom suffixes
    # (e.g. ".x11.tools.64") but without the final ".so".
    # We pass this along with the directory of our library to the main env.
    shared_lib_shim = shared_lib[0].name.rsplit('.', 1)[0]
    env.Append(LIBS=[shared_lib_shim])
    env.Append(LIBPATH=['#bin'])
else:
    # Static compilation
    module_env.add_source_files(env.modules_sources, sources)

    env.Append(LIBPATH=[ros_path + '/lib'])

    for lib in ros_libs:
        env.Append(LIBS=[lib])

    for dep in ros_deps:
        env.Append(LIBS=[dep])
